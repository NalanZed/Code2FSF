public class MySqrt_Mutant4 {
    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result + 1) * (\result + 1) > x || (\result + 1) * (\result + 1) < 0;
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1;
        //@ maintaining 0 <= r && r <= x;
        //@ maintaining ans >= -1 && ans <= x;
        //@ maintaining (\forall int i; i >= 0 && i < l; (long)i * i <= x);
        //@ maintaining (\forall int i; i > r && i <= x; (long)i * i > x);
        //@ maintaining ans >= 0 ==> (long)ans * ans <= x;
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid < x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}
==============================

==============================
