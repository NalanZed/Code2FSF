public class DigitRoot_Mutant5 {
    /*@ requires num >= 0;
      @ ensures \result >= 0 && \result < 10;
      @ ensures \result == num % 9 || \result == 9;
      @ ensures num == 0 ==> \result == 0;
      @*/
    public static int function(int num) {
        //@ maintaining num >= 0;
        //@ decreases num;
        while (num >= 10) {
            int sum = 1;
            //@ maintaining sum >= 1;
            //@ maintaining \old(num) >= 0;
            //@ decreases num;
            while (num > 0) {
                sum = sum + (num % 10);
                num = num / 10;
            }
            num = sum;
        }
        return num;
    }
}
==============================
/root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:21: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:4:) in method function
        return num;
        ^
/root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:21:
      @ ensures \result == num % 9 || \result == 9;
        ^
2 verification failures

==============================
public class DigitRoot_Mutant5 {
    /*@ requires num >= 0;
      @ ensures \result >= 0 && \result < 10;
      @ ensures \result == num % 9 || \result == 9;  
      @ ensures num == 0 ==> \result == 0;
      @*/
    public static int function(int num) {
        //@ maintaining num >= 0;
        //@ decreases num;
        while (num >= 10) {
            int sum = 1;
            //@ maintaining sum >= 1;
            //@ maintaining \old(num) >= 0;
            //@ decreases num;
            while (num > 0) {
                sum = sum + (num % 10);
                num = num / 10;
            }
            num = sum;
        }
        return num;
    }
}

==============================
/root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:21: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:4:) in method function
        return num;
        ^
/root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:21:
      @ ensures \result == num % 9 || \result == 9;  
        ^
2 verification failures

==============================
public class DigitRoot_Mutant5 {
    /*@ requires num >= 0;
      @ ensures \result >= 0 && \result < 10;
 
      @ ensures num == 0 ==> \result == 0;
      @*/
    public static int function(int num) {
        //@ maintaining num >= 0;
        //@ decreases num;
        while (num >= 10) {
            int sum = 1;
            //@ maintaining sum >= 1;
            //@ maintaining \old(num) >= 0;
            //@ decreases num;
            while (num > 0) {
                sum = sum + (num % 10);
                num = num / 10;
            }
            num = sum;
        }
        return num;
    }
}

==============================
/root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:21: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:5:) in method function
        return num;
        ^
/root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:5: verify: Associated declaration: /root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:21:
      @ ensures num == 0 ==> \result == 0;
        ^
2 verification failures

==============================
public class DigitRoot_Mutant5 {
    /*@ requires num >= 0;
      @ ensures \result >= 0 && \result < 10;
 
      @ ensures num == 0 ==> \result == 0;  
      @*/
    public static int function(int num) {
        //@ maintaining num >= 0;
        //@ decreases num;
        while (num >= 10) {
            int sum = 1;
            //@ maintaining sum >= 1;
            //@ maintaining \old(num) >= 0;
            //@ decreases num;
            while (num > 0) {
                sum = sum + (num % 10);
                num = num / 10;
            }
            num = sum;
        }
        return num;
    }
}

==============================
/root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:21: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:5:) in method function
        return num;
        ^
/root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:5: verify: Associated declaration: /root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:21:
      @ ensures num == 0 ==> \result == 0;  
        ^
2 verification failures

==============================
public class DigitRoot_Mutant5 {
    /*@ requires num >= 0;
      @ ensures \result >= 0 && \result < 10;
 
 
      @*/
    public static int function(int num) {
        //@ maintaining num >= 0;
        //@ decreases num;
        while (num >= 10) {
            int sum = 1;
            //@ maintaining sum >= 1;
            //@ maintaining \old(num) >= 0;
            //@ decreases num;
            while (num > 0) {
                sum = sum + (num % 10);
                num = num / 10;
            }
            num = sum;
        }
        return num;
    }
}

==============================
/root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:9: verify: The prover cannot establish an assertion (LoopDecreases) in method function
        //@ decreases num;
            ^
1 verification failure

==============================
public class DigitRoot_Mutant5 {
    /*@ requires num >= 0;
      @ ensures \result >= 0 && \result < 10;
 
 
      @*/
    public static int function(int num) {
        //@ maintaining num >= 0;
        //@ decreases num;  
        while (num >= 10) {
            int sum = 1;
            //@ maintaining sum >= 1;
            //@ maintaining \old(num) >= 0;
            //@ decreases num;
            while (num > 0) {
                sum = sum + (num % 10);
                num = num / 10;
            }
            num = sum;
        }
        return num;
    }
}

==============================
/root/specgen/SpecGen/project/081402-specgen/tmp/DigitRoot_Mutant5.java:9: verify: The prover cannot establish an assertion (LoopDecreases) in method function
        //@ decreases num;  
            ^
1 verification failure

==============================
public class DigitRoot_Mutant5 {
    /*@ requires num >= 0;
      @ ensures \result >= 0 && \result < 10;
 
 
      @*/
    public static int function(int num) {
        //@ maintaining num >= 0;
 
        while (num >= 10) {
            int sum = 1;
            //@ maintaining sum >= 1;
            //@ maintaining \old(num) >= 0;
            //@ decreases num;
            while (num > 0) {
                sum = sum + (num % 10);
                num = num / 10;
            }
            num = sum;
        }
        return num;
    }
}

==============================

==============================
