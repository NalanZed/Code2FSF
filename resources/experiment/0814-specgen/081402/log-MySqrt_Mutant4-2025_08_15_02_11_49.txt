public class MySqrt_Mutant4 {
    /*@ public normal_behavior
      @ requires x >= 0;
      @ ensures \result >= 0 && (\result * \result <= x) && ((\result + 1) * (\result + 1) > x || (\result + 1) * (\result + 1) < 0);
      @ assignable \nothing;
      @*/
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int k; 0 <= k && k < l; (long)k * k <= x);
        //@ maintaining (\forall int k; r < k && k <= x; (long)k * k > x);
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid < x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}
==============================

==============================
