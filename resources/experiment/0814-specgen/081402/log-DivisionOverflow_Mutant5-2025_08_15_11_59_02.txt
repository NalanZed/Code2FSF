public class DivisionOverflow_Mutant5 {
    /*@ public normal_behavior
      @   requires nom != 0;
      @   requires !(denom == Integer.MIN_VALUE && nom == -1); // Prevent overflow case
      @   ensures \result == denom / nom;
      @   signals (ArithmeticException e) nom == 0;
      @*/
    public static int division_test_fail_overflow(int nom, int denom) {
        //~should_fail
        int tmp = denom / nom; // swapping numerator and denominator
        return tmp;
    }
}
==============================
/root/specgen/SpecGen/project/081402-specgen/tmp/DivisionOverflow_Mutant5.java:6: error: Signals clauses are not permitted in normal specification cases
      @   signals (ArithmeticException e) nom == 0;
          ^
1 error

==============================
public class DivisionOverflow_Mutant5 {
    /*@ public normal_behavior
      @   requires nom != 0;
      @   requires !(denom == Integer.MIN_VALUE && nom == -1); // Prevent overflow case
      @   ensures \result == denom / nom;
      @*/
    public static int division_test_fail_overflow(int nom, int denom) {
        //~should_fail
        int tmp = denom / nom; // swapping numerator and denominator
        return tmp;
    }
}
==============================

==============================
