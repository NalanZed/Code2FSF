public class ConvertToFahrenheit_Original {

    /*@ public normal_behavior
      @   requires !Double.isNaN(celsius) && Double.isFinite(celsius);
      @   ensures \result == celsius * 1.80 + 32.00;
      @   ensures \result >= -459.67;  // Absolute zero in Fahrenheit
      @*/
    public static double convertTemperature(double celsius) {
        return celsius * 1.80 + 32.00;
    }
}
==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:9: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:6:) in method convertTemperature
        return celsius * 1.80 + 32.00;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:9:
      @   ensures \result >= -459.67;  // Absolute zero in Fahrenheit
          ^
2 verification failures

==============================
public class ConvertToFahrenheit_Original {

    /*@ public normal_behavior
      @   requires !Double.isNaN(celsius) && Double.isFinite(celsius);
      @   ensures \result == celsius * 1.80 + 32.00;
      @   ensures \result > -459.67;  // Absolute zero in Fahrenheit  
      @*/
    public static double convertTemperature(double celsius) {
        return celsius * 1.80 + 32.00;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:9: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:6:) in method convertTemperature
        return celsius * 1.80 + 32.00;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:9:
      @   ensures \result > -459.67;  // Absolute zero in Fahrenheit  
          ^
2 verification failures

==============================
public class ConvertToFahrenheit_Original {

    /*@ public normal_behavior
      @   requires !Double.isNaN(celsius) && Double.isFinite(celsius);
      @   ensures \result == celsius * 1.80 + 32.00;
      @   ensures \result >= -459.67;  // Absolute zero in Fahrenheit  
      @*/
    public static double convertTemperature(double celsius) {
        return celsius * 1.80 + 32.00;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:9: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:6:) in method convertTemperature
        return celsius * 1.80 + 32.00;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:9:
      @   ensures \result >= -459.67;  // Absolute zero in Fahrenheit  
          ^
2 verification failures

==============================
public class ConvertToFahrenheit_Original {

    /*@ public normal_behavior
      @   requires !Double.isNaN(celsius) && Double.isFinite(celsius);
      @   ensures \result == celsius * 1.80 + 32.00;
      @   ensures \result + 1 >= -459.67;  // Absolute zero in Fahrenheit  
      @*/
    public static double convertTemperature(double celsius) {
        return celsius * 1.80 + 32.00;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:9: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:6:) in method convertTemperature
        return celsius * 1.80 + 32.00;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/ConvertToFahrenheit_Original.java:9:
      @   ensures \result + 1 >= -459.67;  // Absolute zero in Fahrenheit  
          ^
2 verification failures

==============================
public class ConvertToFahrenheit_Original {

    /*@ public normal_behavior
      @   requires !Double.isNaN(celsius) && Double.isFinite(celsius);
      @   ensures \result == celsius * 1.80 + 32.00;
 
      @*/
    public static double convertTemperature(double celsius) {
        return celsius * 1.80 + 32.00;
    }
}

==============================

==============================
