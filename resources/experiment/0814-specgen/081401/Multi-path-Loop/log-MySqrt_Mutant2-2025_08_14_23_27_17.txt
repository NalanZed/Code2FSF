public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result <= x) && (x < (\result + 1) * (\result + 1));
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}
==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result <= x) && (x < (\result + 1) * (\result + 1));
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result < x) && (x < (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result < x) && (x < (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result < x) && (x <= (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result < x) && (x <= (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result <= x) && (x < (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result <= x) && (x < (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result < x) && (x < (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result < x) && (x < (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result < x) && (x <= (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result < x) && (x <= (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result <= x) && (x < (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result <= x) && (x < (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x < (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x < (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x <= (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x <= (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x < (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x < (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result < x) && (x < (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result < x) && (x < (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result < x) && (x < (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result < x) && (x < (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result < x) && (x < (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result < x) && (x < (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result < x) && (x <= (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result < x) && (x <= (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result < x) && (x <= (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result < x) && (x <= (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result < x) && (x <= (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result < x) && (x <= (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result <= x) && (x < (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result <= x) && (x < (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result <= x) && (x < (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result <= x) && (x < (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result <= x) && (x < (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result <= x) && (x < (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result > 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result < x) && (x < (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result < x) && (x < (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result < x) && (x < (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result < x) && (x < (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result < x) && (x < (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result < x) && (x < (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result < x) && (x <= (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result < x) && (x <= (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result < x) && (x <= (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result < x) && (x <= (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result < x) && (x <= (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result < x) && (x <= (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result <= x) && (x < (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result <= x) && (x < (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result <= x) && (x < (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result <= x) && (x < (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result <= x) && (x < (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result <= x) && (x < (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result >= 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x < (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x < (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x < (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x < (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x < (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x < (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x <= (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x <= (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x <= (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x <= (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x <= (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result < x) && (x <= (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x < (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x < (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x < (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x < (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x < (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x < (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x <= (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result <= x) && (x <= (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x < (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x < (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x <= (\result + 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result + 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result + 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result - 1));  
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3:) in method mySqrt
        return ans;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:19:
    //@ ensures \result + 1 >= 0 && (\result * \result - 1 <= x) && (x <= (\result - 1) * (\result - 1));  
        ^
2 verification failures

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i < r; i * i > x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i < r; i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i < r; i * i >= x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i < r; i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i >= x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i <= r; i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i - 1 <= r; i * i > x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i - 1 <= r; i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i - 1 <= r; i * i >= x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans < i && i - 1 <= r; i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i < r; i * i > x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i < r; i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i < r; i * i >= x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i < r; i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i <= r; i * i > x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i <= r; i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i <= r; i * i >= x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i <= r; i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i - 1 <= r; i * i > x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i - 1 <= r; i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i - 1 <= r; i * i >= x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Mutant2.java:8: verify: The prover cannot establish an assertion (LoopInvariant) in method mySqrt
        //@ maintaining (ans != -1) ==> (\forall int i; ans <= i && i - 1 <= r; i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Mutant2 {
    //@ requires x >= 0;
 
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r && r <= x;
        //@ maintaining ans >= -1 && (ans == -1 || (ans * ans <= x));
        //@ maintaining (ans != -1) ==> (\exists int i; ans < i && i < r; i * i > x);  
        //@ decreases r - l;
        while (l < r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
error: An error while executing a proof script for mySqrt: (error "Solver has unexpectedly terminated")
1 error

==============================
