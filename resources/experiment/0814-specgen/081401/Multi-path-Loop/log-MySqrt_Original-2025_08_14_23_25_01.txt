public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans < i && i <= r; (long)i * i > x);
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}
==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans < i && i <= r; (long)i * i > x);
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans < i && i < r; (long)i * i > x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans < i && i < r; (long)i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans < i && i < r; (long)i * i >= x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans < i && i < r; (long)i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans < i && i <= r; (long)i * i > x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans < i && i <= r; (long)i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans < i && i <= r; (long)i * i >= x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans < i && i <= r; (long)i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans < i && i - 1 <= r; (long)i * i > x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans < i && i - 1 <= r; (long)i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans < i && i - 1 <= r; (long)i * i >= x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans < i && i - 1 <= r; (long)i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans <= i && i < r; (long)i * i > x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans <= i && i < r; (long)i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans <= i && i < r; (long)i * i >= x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans <= i && i < r; (long)i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans <= i && i <= r; (long)i * i > x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans <= i && i <= r; (long)i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans <= i && i <= r; (long)i * i >= x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans <= i && i <= r; (long)i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans <= i && i - 1 <= r; (long)i * i > x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans <= i && i - 1 <= r; (long)i * i > x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\forall int i; ans <= i && i - 1 <= r; (long)i * i >= x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/MySqrt_Original.java:12: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method mySqrt
        //@ maintaining (\forall int i; ans <= i && i - 1 <= r; (long)i * i >= x);  
            ^
1 verification failure

==============================
public class MySqrt_Original {

    //@ requires x >= 0;
    //@ ensures \result >= 0;
    //@ ensures (\result * \result) <= x;
    //@ ensures (\result == x || (\result + 1) * (\result + 1) > x);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        //@ maintaining 0 <= l && l <= r + 1 && r <= x;
        //@ maintaining ans >= -1;
        //@ maintaining (ans == -1 || (long)ans * ans <= x);
        //@ maintaining (\exists int i; ans < i && i < r; (long)i * i > x);  
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

==============================
error: An error while executing a proof script for mySqrt: (error "Solver has unexpectedly terminated")
1 error

==============================
