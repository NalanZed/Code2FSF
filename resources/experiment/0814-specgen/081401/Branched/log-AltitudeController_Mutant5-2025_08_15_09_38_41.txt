public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures \result == (absError > 30 ? (error > 0 ? 5 : -4) : 
    //@                  (absError > 20 ? (error > 0 ? 3 : -3) :
    //@                  (absError > 10 ? (error > 0 ? 2 : -2) : error)));
    //@ ensures \result >= -4 && \result <= 5;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        //@ maintaining absError == (error < 0 ? -error : error);
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        //@ maintaining controlSignal == 
        //@     (absError > 30 ? (error > 0 ? 5 : -4) :
        //@     (absError > 20 ? (error > 0 ? 3 : -3) :
        //@     (absError > 10 ? (error > 0 ? 2 : -2) : error)));
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}
==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:11: error: Loop specifications must immediately precede a loop statement
        //@ maintaining absError == (error < 0 ? -error : error);
            ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:15: error: Loop specifications must immediately precede a loop statement
        //@ maintaining controlSignal == 
            ^
2 errors

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures \result == (Math.abs(targetHeight - currentHeight) > 30 ? 
    //@                  (targetHeight > currentHeight ? 5 : -4) : 
    //@                  (Math.abs(targetHeight - currentHeight) > 20 ? 
    //@                  (targetHeight > currentHeight ? 3 : -3) :
    //@                  (Math.abs(targetHeight - currentHeight) > 10 ? 
    //@                  (targetHeight > currentHeight ? 2 : -2) : 
    //@                  (targetHeight - currentHeight)));
    //@ ensures \result >= -4 && \result <= 5;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}
==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:10: error: ')' expected
    //@                  (targetHeight - currentHeight)));
                                                         ^
1 error

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
    //@ ensures \result >= -4 && \result <= 5;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}
==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6:) in method altitudeController
        return controlSignal;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22:
    //@ ensures \result >= -4 && \result <= 5;
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
    //@ ensures \result > -4 && \result < 5;  
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6:) in method altitudeController
        return controlSignal;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22:
    //@ ensures \result > -4 && \result < 5;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
    //@ ensures \result > -4 && \result <= 5;  
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6:) in method altitudeController
        return controlSignal;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22:
    //@ ensures \result > -4 && \result <= 5;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
    //@ ensures \result > -4 && \result - 1 <= 5;  
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6:) in method altitudeController
        return controlSignal;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22:
    //@ ensures \result > -4 && \result - 1 <= 5;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
    //@ ensures \result >= -4 && \result < 5;  
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6:) in method altitudeController
        return controlSignal;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22:
    //@ ensures \result >= -4 && \result < 5;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
    //@ ensures \result >= -4 && \result <= 5;  
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6:) in method altitudeController
        return controlSignal;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22:
    //@ ensures \result >= -4 && \result <= 5;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
    //@ ensures \result >= -4 && \result - 1 <= 5;  
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6:) in method altitudeController
        return controlSignal;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22:
    //@ ensures \result >= -4 && \result - 1 <= 5;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
    //@ ensures \result + 1 >= -4 && \result < 5;  
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6:) in method altitudeController
        return controlSignal;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22:
    //@ ensures \result + 1 >= -4 && \result < 5;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
    //@ ensures \result + 1 >= -4 && \result <= 5;  
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6:) in method altitudeController
        return controlSignal;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22:
    //@ ensures \result + 1 >= -4 && \result <= 5;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
    //@ ensures \result + 1 >= -4 && \result - 1 <= 5;  
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6:) in method altitudeController
        return controlSignal;
        ^
/root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081401-specgen/tmp/AltitudeController_Mutant5.java:22:
    //@ ensures \result + 1 >= -4 && \result - 1 <= 5;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ requires Integer.MIN_VALUE <= currentHeight && currentHeight <= Integer.MAX_VALUE;
    //@ requires Integer.MIN_VALUE <= targetHeight && targetHeight <= Integer.MAX_VALUE;
    //@ ensures (\result == 5) || (\result == -4) || (\result == 3) || (\result == -3) || 
    //@         (\result == 2) || (\result == -2) || (\result == (targetHeight - currentHeight));
 
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================

==============================
