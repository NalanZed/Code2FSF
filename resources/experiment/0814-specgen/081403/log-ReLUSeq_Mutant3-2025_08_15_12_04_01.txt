public class ReLUSeq_Mutant3 {
    /*@ requires !Double.isNaN(x);
      @ ensures x <= 0.0 ==> \result == x;
      @ ensures x > 0.0 ==> \result == 0;
      @ ensures Double.isFinite(\result);
      @*/
    public static double computeReLU(double x) {
        return ((x <= 0.0) ? x : 0);
    }
}
==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/ReLUSeq_Mutant3.java:8: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/ReLUSeq_Mutant3.java:5:) in method computeReLU
        return ((x <= 0.0) ? x : 0);
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/ReLUSeq_Mutant3.java:5: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/ReLUSeq_Mutant3.java:8:
      @ ensures Double.isFinite(\result);
        ^
2 verification failures

==============================
public class ReLUSeq_Mutant3 {
    /*@ requires !Double.isNaN(x);
      @ ensures x <= 0.0 ==> \result == x;
      @ ensures x > 0.0 ==> \result == 0;
      @ ensures Double.isFinite(\result);  
      @*/
    public static double computeReLU(double x) {
        return ((x <= 0.0) ? x : 0);
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/ReLUSeq_Mutant3.java:8: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/ReLUSeq_Mutant3.java:5:) in method computeReLU
        return ((x <= 0.0) ? x : 0);
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/ReLUSeq_Mutant3.java:5: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/ReLUSeq_Mutant3.java:8:
      @ ensures Double.isFinite(\result);  
        ^
2 verification failures

==============================
public class ReLUSeq_Mutant3 {
    /*@ requires !Double.isNaN(x);
      @ ensures x <= 0.0 ==> \result == x;
      @ ensures x > 0.0 ==> \result == 0;
 
      @*/
    public static double computeReLU(double x) {
        return ((x <= 0.0) ? x : 0);
    }
}

==============================

==============================
