public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x - (y - n) && n >= 0;
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}
==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (y - n) && n >= 0;
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x - (y - n) && n > 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (y - n) && n > 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x - (y - n) && n >= 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (y - n) && n >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x - (y - n) && n + 1 >= 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (y - n) && n + 1 >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x + (y + n) && n > 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (y + n) && n > 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x + (y + n) && n >= 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (y + n) && n >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x + (y + n) && n + 1 >= 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (y + n) && n + 1 >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x + (y - n) && n > 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (y - n) && n > 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x + (y - n) && n >= 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (y - n) && n >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x + (y - n) && n + 1 >= 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (y - n) && n + 1 >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x - (y + n) && n > 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (y + n) && n > 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x - (y + n) && n >= 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (y + n) && n >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
            //@ maintaining sum == x - (y + n) && n + 1 >= 0;  
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:8: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (y + n) && n + 1 >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:2:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:2: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y < 0 ==> \result == x - (-y);
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x - (-y);  
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:2:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:2: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y < 0 ==> \result == x - (-y);  
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
    //@ ensures y <= 0 ==> \result == x - (-y);  
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:2:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:2: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y <= 0 ==> \result == x - (-y);  
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
    //@ ensures y < 0 ==> \result == x + (-y);  
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:2:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:2: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y < 0 ==> \result == x + (-y);  
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
    //@ ensures y <= 0 ==> \result == x + (-y);  
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:2:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:2: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y <= 0 ==> \result == x + (-y);  
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (-y - n) && n >= 0;
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n > 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (-y - n) && n > 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n >= 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (-y - n) && n >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y - n) && n + 1 >= 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (-y - n) && n + 1 >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y + n) && n > 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (-y + n) && n > 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y + n) && n >= 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (-y + n) && n >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x + (-y + n) && n + 1 >= 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x + (-y + n) && n + 1 >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x - (-y + n) && n > 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (-y + n) && n > 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x - (-y + n) && n >= 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (-y + n) && n >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x - (-y + n) && n + 1 >= 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (-y + n) && n + 1 >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x - (-y - n) && n > 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (-y - n) && n > 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x - (-y - n) && n >= 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (-y - n) && n >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
            //@ maintaining sum == x - (-y - n) && n + 1 >= 0;  
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:17: verify: The prover cannot establish an assertion (LoopInvariantBeforeLoop) in method subLoop
            //@ maintaining sum == x - (-y - n) && n + 1 >= 0;  
                ^
1 verification failure

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
 
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y >= 0 ==> \result == x + y;
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y > 0 ==> \result == x + y;  
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
 
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y > 0 ==> \result == x + y;  
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x + y;  
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
 
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y >= 0 ==> \result == x + y;  
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y + 1 >= 0 ==> \result == x + y;  
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
 
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y + 1 >= 0 ==> \result == x + y;  
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y > 0 ==> \result == x - y;  
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
 
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y > 0 ==> \result == x - y;  
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y >= 0 ==> \result == x - y;  
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
 
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y >= 0 ==> \result == x - y;  
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
 
    //@ ensures y + 1 >= 0 ==> \result == x - y;  
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
 
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3:) in method subLoop
        return sum;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/SubLoop_Mutant3.java:25:
    //@ ensures y + 1 >= 0 ==> \result == x - y;  
        ^
2 verification failures

==============================
public class SubLoop_Mutant3 {
 
 
    public static int subLoop(int x, int y) {
        int sum = x;
        if (y < 0) {
            int n = y;
 
            //@ maintaining n <= y;
            //@ decreases n;
            while (n > 0) {
                sum = sum - 1;
                n = n - 1;
            }
        } else {
            int n = -y;
 
            //@ maintaining n <= -y;
            //@ decreases n;
            while (n > 0) {
                sum = sum + 1;
                n = n - 1;
            }
        }
        return sum;
    }
}

==============================

==============================
