public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
      @ ensures (operator == '+') ==> (\result == num1 - num2); // Mutation: + becomes -
      @ ensures (operator == '-') ==> (\result == num1 - num2);
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}
==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '+') ==> (\result == num1 - num2); // Mutation: + becomes -
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
      @ ensures (operator == '+') ==> (\result == num1 - num2); // Mutation: + becomes -  
      @ ensures (operator == '-') ==> (\result == num1 - num2);
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '+') ==> (\result == num1 - num2); // Mutation: + becomes -  
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
      @ ensures (operator == '+') ==> (\result == num1 + num2); // Mutation: + becomes +  
      @ ensures (operator == '-') ==> (\result == num1 - num2);
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '+') ==> (\result == num1 + num2); // Mutation: + becomes +  
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
      @ ensures (operator == '+') ==> (\result == num1 + num2); // Mutation: + becomes -  
      @ ensures (operator == '-') ==> (\result == num1 - num2);
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '+') ==> (\result == num1 + num2); // Mutation: + becomes -  
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
      @ ensures (operator == '+') ==> (\result == num1 + num2); // Mutation: - becomes +  
      @ ensures (operator == '-') ==> (\result == num1 - num2);
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '+') ==> (\result == num1 + num2); // Mutation: - becomes +  
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
      @ ensures (operator == '+') ==> (\result == num1 + num2); // Mutation: - becomes -  
      @ ensures (operator == '-') ==> (\result == num1 - num2);
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '+') ==> (\result == num1 + num2); // Mutation: - becomes -  
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
      @ ensures (operator == '+') ==> (\result == num1 - num2); // Mutation: + becomes +  
      @ ensures (operator == '-') ==> (\result == num1 - num2);
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '+') ==> (\result == num1 - num2); // Mutation: + becomes +  
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
      @ ensures (operator == '+') ==> (\result == num1 - num2); // Mutation: - becomes +  
      @ ensures (operator == '-') ==> (\result == num1 - num2);
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '+') ==> (\result == num1 - num2); // Mutation: - becomes +  
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
      @ ensures (operator == '+') ==> (\result == num1 - num2); // Mutation: - becomes -  
      @ ensures (operator == '-') ==> (\result == num1 - num2);
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '+') ==> (\result == num1 - num2); // Mutation: - becomes -  
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
 
      @ ensures (operator == '-') ==> (\result == num1 - num2);
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:7:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:7: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '-') ==> (\result == num1 - num2);
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
 
      @ ensures (operator == '-') ==> (\result == num1 - num2);  
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:7:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:7: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '-') ==> (\result == num1 - num2);  
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
 
      @ ensures (operator == '-') ==> (\result == num1 + num2);  
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:7:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:7: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant1.java:35:
      @ ensures (operator == '-') ==> (\result == num1 + num2);  
        ^
2 verification failures

==============================
public class Calculator_Mutant1 {
    /*@ requires operator == '+' || operator == '-' || operator == '*' || 
      @          operator == '/' || operator == '%';
      @ requires operator != '/' || num2 != 0;
      @ requires operator != '%' || num2 != 0;
 
 
      @ ensures (operator == '*') ==> (\result == num1 * num2);
      @ ensures (operator == '/') ==> (\result == num1 / num2);
      @ ensures (operator == '%') ==> (\result == num1 % num2);
      @ ensures (operator != '+' && operator != '-' && operator != '*' && 
      @         operator != '/' && operator != '%') ==> (\result == -1);
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 - num2; //mutated + with -
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================

==============================
