public class DigitRoot_Mutant3 {
    //@ requires num >= 0;
    //@ ensures \result >= 0 && \result < 10;
    //@ ensures \result == (num == 0 ? 0 : (num % 9 == 0 ? 9 : num % 9));
    public static int function(int num) {
        //@ maintaining num >= 0;
        //@ decreases num < 10 ? 0 : num;
        while (num >= 10) {
            int sum = 0;
            //@ maintaining sum <= 0;
            //@ maintaining \old(num) >= num && num >= 0;
            //@ decreases num;
            while (num > 0) {
                sum = sum - (num % 10);
                num = num / 10;
            }
            num = sum;
        }
        return num;
    }
}
==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/DigitRoot_Mutant3.java:19: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/081403-specgen/tmp/DigitRoot_Mutant3.java:4:) in method function
        return num;
        ^
/root/specgen/SpecGen/project/081403-specgen/tmp/DigitRoot_Mutant3.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/081403-specgen/tmp/DigitRoot_Mutant3.java:19:
    //@ ensures \result == (num == 0 ? 0 : (num % 9 == 0 ? 9 : num % 9));
        ^
2 verification failures

==============================
public class DigitRoot_Mutant3 {
    //@ requires num >= 0;
    //@ ensures \result >= 0 && \result < 10;
    //@ ensures \result == (num == 0 ? 0 : (num % 9 == 0 ? 9 : num % 9));  
    public static int function(int num) {
        //@ maintaining num >= 0;
        //@ decreases num < 10 ? 0 : num;
        while (num >= 10) {
            int sum = 0;
            //@ maintaining sum <= 0;
            //@ maintaining \old(num) >= num && num >= 0;
            //@ decreases num;
            while (num > 0) {
                sum = sum - (num % 10);
                num = num / 10;
            }
            num = sum;
        }
        return num;
    }
}

==============================

==============================
