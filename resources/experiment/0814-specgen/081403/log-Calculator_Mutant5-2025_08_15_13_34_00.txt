public class Calculator_Mutant5 {
    /*@ public normal_behavior
      @ requires operator == '+' ==> (num1 >= 0 && num2 >= 0 ? (num1 + num2) <= Integer.MAX_VALUE : 
      @                             (num1 < 0 && num2 < 0 ? (num1 + num2) >= Integer.MIN_VALUE : true));
      @ requires operator == '-' ==> (num1 >= 0 && num2 <= 0 ? (num1 - num2) <= Integer.MAX_VALUE :
      @                             (num1 <= 0 && num2 >= 0 ? (num1 - num2) >= Integer.MIN_VALUE : true));
      @ requires operator == '*' ==> (num1 != 0 && num2 != 0) ==> 
      @                             ((num1 > 0 && num2 > 0 ? (num1 * num2) <= Integer.MAX_VALUE :
      @                              (num1 < 0 && num2 < 0 ? (num1 * num2) <= Integer.MAX_VALUE :
      @                              (num1 > 0 && num2 < 0 ? (num1 * num2) >= Integer.MIN_VALUE :
      @                              (num1 < 0 && num2 > 0 ? (num1 * num2) >= Integer.MIN_VALUE : true))));
      @ requires operator == '/' ==> num2 != 0;
      @ requires operator == '%' ==> num2 != 0;
      @ ensures (operator == '+') ==> \result == num1 + num2;
      @ ensures (operator == '-') ==> \result == num1 - num2;
      @ ensures (operator == '*') ==> \result == num1 * num2;
      @ ensures (operator == '/') ==> \result == num1 / num2;
      @ ensures (operator == '%') ==> \result == num1 + num2; // Mutation specification
      @ ensures (!(operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%')) 
      @         ==> \result == -1;
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}
==============================
/root/specgen/SpecGen/project/081403-specgen/tmp/Calculator_Mutant5.java:11: error: ')' expected
      @                              (num1 < 0 && num2 > 0 ? (num1 * num2) >= Integer.MIN_VALUE : true))));
                                                                                                          ^
1 error

==============================
public class Calculator_Mutant5 {
    /*@ public normal_behavior
      @ requires operator == '+' ==> (num1 >= 0 && num2 >= 0 ? (num1 + num2) <= Integer.MAX_VALUE : 
      @                             (num1 < 0 && num2 < 0 ? (num1 + num2) >= Integer.MIN_VALUE : true));
      @ requires operator == '-' ==> (num1 >= 0 && num2 <= 0 ? (num1 - num2) <= Integer.MAX_VALUE :
      @                             (num1 <= 0 && num2 >= 0 ? (num1 - num2) >= Integer.MIN_VALUE : true));
      @ requires operator == '*' ==> (num1 != 0 && num2 != 0) ==> 
      @                             ((num1 > 0 && num2 > 0 ? (num1 * num2) <= Integer.MAX_VALUE :
      @                              (num1 < 0 && num2 < 0 ? (num1 * num2) <= Integer.MAX_VALUE :
      @                              (num1 > 0 && num2 < 0 ? (num1 * num2) >= Integer.MIN_VALUE :
      @                              (num1 < 0 && num2 > 0 ? (num1 * num2) >= Integer.MIN_VALUE : true)))));
      @ requires operator == '/' ==> num2 != 0;
      @ requires operator == '%' ==> num2 != 0;
      @ ensures (operator == '+') ==> \result == num1 + num2;
      @ ensures (operator == '-') ==> \result == num1 - num2;
      @ ensures (operator == '*') ==> \result == num1 * num2;
      @ ensures (operator == '/') ==> \result == num1 / num2;
      @ ensures (operator == '%') ==> \result == num1 + num2; // Mutation specification
      @ ensures (!(operator == '+' || operator == '-' || operator == '*' || operator == '/' || operator == '%')) 
      @         ==> \result == -1;
      @*/
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}
==============================

==============================
